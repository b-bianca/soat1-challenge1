{
	"info": {
		"_postman_id": "ad366006-d6e5-41a8-8b14-0e5b79002ac0",
		"name": "FIAP - RestaurantProject",
		"description": "# üöÄ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## üîñ **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these request types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a variable called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## üí™ Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more scripts in \"Tests\" to verify if the API works as expected and execute flows.\n    \n\n## ‚ÑπÔ∏è Resources\n\n[Building requests](https://learning.postman.com/docs/sending-requests/requests/)  \n[Authorizing requests](https://learning.postman.com/docs/sending-requests/authorization/)  \n[Using variables](https://learning.postman.com/docs/sending-requests/variables/)  \n[Managing environments](https://learning.postman.com/docs/sending-requests/managing-environments/)  \n[Writing scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28417591",
		"_collection_link": "https://soat1-g21.postman.co/workspace/SOAT1-TechChallange1~80520c87-3136-4b4e-a470-57475ca25d25/collection/16227218-ad366006-d6e5-41a8-8b14-0e5b79002ac0?action=share&creator=28417591&source=collection_link"
	},
	"item": [
		{
			"name": "Order",
			"item": [
				{
					"name": "Create order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": 1,\n    \"items\":[\n        {\n            \"product_id\": 1,\n            \"quantity\": 1\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url.restaurant}}/orders",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customer_id\": 1,\n    \"items\":[\n        {\n            \"product_id\": 1,\n            \"quantity\": 1\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url.restaurant}}/orders",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 20:51:56 GMT"
								},
								{
									"key": "Content-Length",
									"value": "260"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 8,\n    \"status\": \"received\",\n    \"customer_id\": 1,\n    \"items\": [\n        {\n            \"ID\": 8,\n            \"OrderID\": 8,\n            \"ProductID\": 1,\n            \"Quantity\": 1,\n            \"CreatedAt\": \"2023-07-09T20:51:56.717Z\",\n            \"UpdatedAt\": \"2023-07-09T20:51:56.717Z\"\n        }\n    ],\n    \"created_at\": \"2023-07-09T20:51:56.697Z\",\n    \"updated_at\": \"2023-07-09T20:51:56.697Z\"\n}"
						}
					]
				},
				{
					"name": "Get orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url.restaurant}}/orders",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url.restaurant}}/orders",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:25:16 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1492"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": [\n        {\n            \"id\": 1,\n            \"status\": \"received\",\n            \"customer_id\": 1,\n            \"items\": [\n                {\n                    \"ID\": 1,\n                    \"OrderID\": 1,\n                    \"ProductID\": 1,\n                    \"Quantity\": 1,\n                    \"CreatedAt\": \"2023-07-09T21:56:43Z\",\n                    \"UpdatedAt\": \"2023-07-09T21:56:43Z\"\n                }\n            ],\n            \"created_at\": \"2023-07-09T21:56:43Z\",\n            \"updated_at\": \"2023-07-09T21:56:43Z\"\n        },\n        {\n            \"id\": 2,\n            \"status\": \"received\",\n            \"customer_id\": 1,\n            \"items\": [\n                {\n                    \"ID\": 2,\n                    \"OrderID\": 2,\n                    \"ProductID\": 1,\n                    \"Quantity\": 1,\n                    \"CreatedAt\": \"2023-07-09T21:56:49Z\",\n                    \"UpdatedAt\": \"2023-07-09T21:56:49Z\"\n                }\n            ],\n            \"created_at\": \"2023-07-09T21:56:49Z\",\n            \"updated_at\": \"2023-07-09T21:56:49Z\"\n        },\n        {\n            \"id\": 3,\n            \"status\": \"received\",\n            \"customer_id\": 1,\n            \"items\": [\n                {\n                    \"ID\": 3,\n                    \"OrderID\": 3,\n                    \"ProductID\": 1,\n                    \"Quantity\": 1,\n                    \"CreatedAt\": \"2023-07-09T22:17:22Z\",\n                    \"UpdatedAt\": \"2023-07-09T22:17:22Z\"\n                }\n            ],\n            \"created_at\": \"2023-07-09T22:17:22Z\",\n            \"updated_at\": \"2023-07-09T22:17:22Z\"\n        },\n        {\n            \"id\": 4,\n            \"status\": \"received\",\n            \"customer_id\": 1,\n            \"items\": [\n                {\n                    \"ID\": 4,\n                    \"OrderID\": 4,\n                    \"ProductID\": 1,\n                    \"Quantity\": 1,\n                    \"CreatedAt\": \"2023-07-09T22:17:23Z\",\n                    \"UpdatedAt\": \"2023-07-09T22:17:23Z\"\n                }\n            ],\n            \"created_at\": \"2023-07-09T22:17:23Z\",\n            \"updated_at\": \"2023-07-09T22:17:23Z\"\n        },\n        {\n            \"id\": 5,\n            \"status\": \"received\",\n            \"customer_id\": 1,\n            \"items\": [\n                {\n                    \"ID\": 5,\n                    \"OrderID\": 5,\n                    \"ProductID\": 1,\n                    \"Quantity\": 1,\n                    \"CreatedAt\": \"2023-07-09T22:20:59Z\",\n                    \"UpdatedAt\": \"2023-07-09T22:20:59Z\"\n                }\n            ],\n            \"created_at\": \"2023-07-09T22:20:59Z\",\n            \"updated_at\": \"2023-07-09T22:20:59Z\"\n        },\n        {\n            \"id\": 6,\n            \"status\": \"received\",\n            \"customer_id\": 1,\n            \"items\": [\n                {\n                    \"ID\": 6,\n                    \"OrderID\": 6,\n                    \"ProductID\": 1,\n                    \"Quantity\": 1,\n                    \"CreatedAt\": \"2023-07-09T22:21:00Z\",\n                    \"UpdatedAt\": \"2023-07-09T22:21:00Z\"\n                }\n            ],\n            \"created_at\": \"2023-07-09T22:21:00Z\",\n            \"updated_at\": \"2023-07-09T22:21:00Z\"\n        }\n    ],\n    \"count\": 6\n}"
						}
					]
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Teste\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url.restaurant}}/categories",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Teste\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url.restaurant}}/categories",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:24:19 GMT"
								},
								{
									"key": "Content-Length",
									"value": "101"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"Teste\",\n    \"created_at\": \"2023-07-09T22:24:19.57Z\",\n    \"updated_at\": \"2023-07-09T22:24:19.57Z\"\n}"
						}
					]
				},
				{
					"name": "Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"X-Burguer\",\n    \"description\": \"P√£o, carne, queijo, alface, tomate e maionese\",\n    \"category_id\": \"1\",\n    \"price\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url.restaurant}}/products",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"products"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"X-Burguer\",\n    \"description\": \"P√£o, carne, queijo, alface, tomate e maionese\",\n    \"category_id\": \"1\",\n    \"price\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url.restaurant}}/products",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:24:10 GMT"
								},
								{
									"key": "Content-Length",
									"value": "196"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 12,\n    \"name\": \"X-Burguer\",\n    \"description\": \"P√£o, carne, queijo, alface, tomate e maionese\",\n    \"category_id\": \"1\",\n    \"price\": 10,\n    \"created_at\": \"2023-07-09T22:24:10.3Z\",\n    \"updated_at\": \"2023-07-09T22:24:10.3Z\"\n}"
						}
					]
				},
				{
					"name": "Edita produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:8080/api/v1/product",
							"host": [
								"{{base_url}}"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"product"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"alterado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url.restaurant}}/products/11",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"products",
										"11"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:22:53 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Deleta produto",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url.restaurant}}/products/7",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"products",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url.restaurant}}/categories",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url.restaurant}}/categories",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:21:21 GMT"
								},
								{
									"key": "Content-Length",
									"value": "421"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": [\n        {\n            \"id\": 1,\n            \"name\": \"Lanche\",\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Acompanhamento\",\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Bebida\",\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Sobremesa\",\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        }\n    ],\n    \"count\": 4\n}"
						}
					]
				},
				{
					"name": "Get Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url.restaurant}}/products",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url.restaurant}}/products",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:21:34 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1815"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": [\n        {\n            \"id\": 1,\n            \"name\": \"X-Burguer\",\n            \"description\": \"P√£o, carne, queijo, alface, tomate e maionese\",\n            \"category_id\": \"1\",\n            \"price\": 10,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"X-Salada\",\n            \"description\": \"P√£o, carne, queijo, alface, tomate, maionese e batata palha\",\n            \"category_id\": \"1\",\n            \"price\": 12,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"X-Bacon\",\n            \"description\": \"P√£o, carne, queijo, alface, tomate, maionese e bacon\",\n            \"category_id\": \"1\",\n            \"price\": 15,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"X-Tudo\",\n            \"description\": \"P√£o, carne, queijo, alface, tomate, maionese, bacon, ovo e batata palha\",\n            \"category_id\": \"1\",\n            \"price\": 18,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Batata Frita\",\n            \"description\": \"Batata frita com molho especial\",\n            \"category_id\": \"2\",\n            \"price\": 5,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"Refrigerante\",\n            \"description\": \"Refrigerante lata 350ml\",\n            \"category_id\": \"3\",\n            \"price\": 4,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Suco\",\n            \"description\": \"Suco natural 500ml\",\n            \"category_id\": \"3\",\n            \"price\": 6,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 8,\n            \"name\": \"Milk Shake\",\n            \"description\": \"Milk Shake 500ml\",\n            \"category_id\": \"3\",\n            \"price\": 8,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 9,\n            \"name\": \"Sorvete\",\n            \"description\": \"Sorvete 500ml\",\n            \"category_id\": \"4\",\n            \"price\": 10,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 10,\n            \"name\": \"Pudim\",\n            \"description\": \"Pudim de leite\",\n            \"category_id\": \"4\",\n            \"price\": 8,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        }\n    ],\n    \"count\": 10\n}"
						}
					]
				},
				{
					"name": "Get products by categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url.restaurant}}/categories/1/products",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"categories",
								"1",
								"products"
							]
						}
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url.restaurant}}/categories/1/products",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"categories",
										"1",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:21:47 GMT"
								},
								{
									"key": "Content-Length",
									"value": "831"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": [\n        {\n            \"id\": 1,\n            \"name\": \"X-Burguer\",\n            \"description\": \"P√£o, carne, queijo, alface, tomate e maionese\",\n            \"category_id\": \"1\",\n            \"price\": 10,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"X-Salada\",\n            \"description\": \"P√£o, carne, queijo, alface, tomate, maionese e batata palha\",\n            \"category_id\": \"1\",\n            \"price\": 12,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"X-Bacon\",\n            \"description\": \"P√£o, carne, queijo, alface, tomate, maionese e bacon\",\n            \"category_id\": \"1\",\n            \"price\": 15,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"X-Tudo\",\n            \"description\": \"P√£o, carne, queijo, alface, tomate, maionese, bacon, ovo e batata palha\",\n            \"category_id\": \"1\",\n            \"price\": 18,\n            \"created_at\": \"2023-07-09T21:45:26Z\",\n            \"updated_at\": \"2023-07-09T21:45:26Z\"\n        }\n    ],\n    \"count\": 4\n}"
						}
					]
				}
			]
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Create Customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ana\",\r\n    \"email\": \"ana@email.com\",\r\n    \"cpf\": \"222222222\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url.restaurant}}/customer",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"customer"
							]
						}
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ana\",\r\n    \"email\": \"ana@email.com\",\r\n    \"cpf\": \"222222222\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url.restaurant}}/customer",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"customer"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:22:04 GMT"
								},
								{
									"key": "Content-Length",
									"value": "143"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"ana\",\n    \"email\": \"ana@email.com\",\n    \"cpf\": \"222222222\",\n    \"created_at\": \"2023-07-09T22:22:04.012Z\",\n    \"updated_at\": \"2023-07-09T22:22:04.012Z\"\n}"
						}
					]
				},
				{
					"name": "Get Customer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url.restaurant}}/customer/222222222",
							"host": [
								"{{base_url.restaurant}}"
							],
							"path": [
								"customer",
								"222222222"
							]
						}
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url.restaurant}}/customer/222222222",
									"host": [
										"{{base_url.restaurant}}"
									],
									"path": [
										"customer",
										"222222222"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 09 Jul 2023 22:22:12 GMT"
								},
								{
									"key": "Content-Length",
									"value": "135"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"ana\",\n    \"email\": \"ana@email.com\",\n    \"cpf\": \"222222222\",\n    \"created_at\": \"2023-07-09T22:22:04Z\",\n    \"updated_at\": \"2023-07-09T22:22:04Z\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "localhost"
		}
	]
}